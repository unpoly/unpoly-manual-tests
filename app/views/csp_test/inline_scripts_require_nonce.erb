<% content_for :head do %>
  <meta name="csp-nonce" content="<%= content_security_policy_nonce %>">
<% end %>

<h1>Content-Security-Policy (inline scripts require a nonce)</h1>

<h2>Setup</h2>

<ul>
  <li>Page was delivered with the CSP: <code><%= response.headers['Content-Security-Policy'] %></code></li>
</ul>

<h2>Expectations</h2>

<ul>
  <li>Unpoly boots</li>
  <li>The console shows <code>"hello from script with nonce"</code>.</li>
  <li>The console does <b>not</b> show <code>"hello from script without nonce"</code>. A CSP violation should be logged instead.</li>
</ul>

<script nonce="<%= content_security_policy_nonce %>">
  console.log("hello from script with nonce")
</script>

<script>
  console.log("hello from script without nonce")
</script>

<h2>Eval nonced function</h2>

<script nonce="<%= content_security_policy_nonce %>">
  up.protocol.config.nonceableAttributes.push('data-code')

  up.compiler('#eval-nonced-function', function(element) {
    let callback = up.NonceableCallback.fromString(element.dataset.code)
    element.textContent = 'embedded nonce: ' + callback.nonce

    element.addEventListener('click', function() {
      let value = callback.toFunction()()
      console.log("Return value is %o", value)
      up.reload(element)
    })
  })
</script>

<div id="eval-nonced-function" class="btn btn-primary" data-code="<%= up.safe_callback("console.log('attr evaled'); return 'return value from attr'")%>">
  click me to eval with code-embedded nonce
</div>
